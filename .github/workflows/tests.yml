name: CI - Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    # Test against multiple Python versions (adjust as needed)
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    env:
      # Prevent live API calls in CI; your tests should mock these.
      ENV: "ci"
      PYTHONPATH: "."
      # Example API keys used in tests; set real ones only if a test truly needs them.
      KEEPA_API_KEY: "dummy"
      SERPAPI_API_KEY: "dummy"
      EBAY_APP_ID: "dummy"

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install system deps (optional)
        run: |
          python -m pip install --upgrade pip

      - name: Install project deps
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # If you use pyproject.toml/poetry/pdm/uv, replace the above with the appropriate installer

      - name: Show environment (debug)
        run: |
          python --version
          pip list

      - name: Run tests with coverage and JUnit XML
        run: |
          mkdir -p reports
          pytest \
            --maxfail=1 -q \
            --cov=. --cov-report=xml:reports/coverage.xml --cov-report=term-missing \
            --junitxml=reports/junit.xml

      - name: Upload test & coverage artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-py${{ matrix.python-version }}
          path: reports/

     
