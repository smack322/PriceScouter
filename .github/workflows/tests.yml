# .github/workflows/tests.yml
name: Tests

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: {}

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f pyproject.toml ] || [ -f setup.cfg ] || [ -f setup.py ]; then
            pip install ".[test]" || true
          fi
          python -m pip install pytest pytest-cov
      - name: Run unit tests (mock LLMs)
        env:
          PYTHONPATH: ${{ github.workspace }}
          DISABLE_LLM: "1"                    # force mocks/no-network
        run: |
          mkdir -p reports
          pytest -q \
            -k "not requires_openai" \
            --maxfail=1 --disable-warnings \
            --junitxml=reports/junit.xml \
            --cov=. --cov-report=xml:reports/coverage.xml
      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-reports
          path: reports/

  live-integration:
    # only run on trusted pushes, not on PRs from forks
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: PriceScouter
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SERPAPI_API_KEY: ${{ secrets.SERPAPI_API_KEY }}
      KEEPA_API_KEY: ${{ secrets.KEEPA_API_KEY }}
      EBAY_CLIENT_ID: ${{ secrets.EBAY_CLIENT_ID }}
      EBAY_CLIENT_SECRET: ${{ secrets.EBAY_CLIENT_SECRET }}
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          if [ -f pyproject.toml ] || [ -f setup.cfg ] || [ -f setup.py ]; then
            pip install ".[test]" || true
          fi
          python -m pip install pytest pytest-cov
      - name: Run live tests (marked)
        run: |
          mkdir -p reports
          pytest -q -m requires_openai \
            --maxfail=1 --disable-warnings \
            --junitxml=reports/junit.xml
      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: live-reports
          path: reports/
